{
	"name": "vscode-markdownlint",
	"displayName": "markdownlint",
	"description": "Markdown linting and style checking for Visual Studio Code",
	"icon": "images/markdownlint-128.png",
	"version": "0.55.0",
	"author": "David Anson (https://dlaa.me/)",
	"publisher": "DavidAnson",
	"sponsor": {
		"url": "https://github.com/sponsors/DavidAnson"
	},
	"license": "MIT",
	"homepage": "https://github.com/DavidAnson/vscode-markdownlint",
	"repository": {
		"type": "git",
		"url": "https://github.com/DavidAnson/vscode-markdownlint.git"
	},
	"bugs": {
		"url": "https://github.com/DavidAnson/vscode-markdownlint/issues"
	},
	"funding": "https://github.com/sponsors/DavidAnson",
	"scripts": {
		"ci": "npm test && npm run test-ui",
		"compile": "webpack --mode production",
		"compile-debug": "webpack --mode none",
		"lint": "eslint --ignore-pattern bundle.js --ignore-pattern bundle.web.js *.js *.cjs test-ui/*.cjs && markdownlint-cli2 *.md",
		"schema": "cpy ./node_modules/markdownlint/schema/markdownlint-config-schema.json . --flat && cpy ./node_modules/markdownlint-cli2/schema/markdownlint-cli2-config-schema.json . --flat",
		"test": "node --test --experimental-test-coverage && npm run lint && npm run compile && npm run schema && git diff --exit-code",
		"test-ui": "node ./test-ui/run-tests.mjs",
		"test-web": "npm install --no-save @vscode/test-web && sed -i '.bak' -e 's/\\/{{uuid}}\\./\\//' node_modules/@vscode/test-web/out/server/workbench.js && vscode-test-web --browser=none --verbose --extensionDevelopmentPath=. .",
		"upgrade": "npx --yes npm-check-updates --upgrade"
	},
	"categories": [
		"Linters",
		"Formatters"
	],
	"engines": {
		"node": ">=16",
		"vscode": "^1.75.0"
	},
	"main": "./bundle",
	"browser": "./bundle.web",
	"dependencies": {
		"ignore": "5.3.1",
		"markdownlint-cli2": "0.13.0",
		"picomatch": "4.0.2"
	},
	"devDependencies": {
		"@types/vscode": "1.75.0",
		"@vscode/test-electron": "2.3.9",
		"cpy-cli": "5.0.0",
		"eslint": "8.56.0",
		"eslint-plugin-n": "17.2.1",
		"eslint-plugin-unicorn": "52.0.0",
		"path-browserify": "1.0.1",
		"stream-browserify": "3.0.0",
		"terser-webpack-plugin": "5.3.10",
		"util": "0.12.5",
		"vsce": "2.15.0",
		"webpack": "5.94.0",
		"webpack-cli": "5.1.4"
	},
	"keywords": [
		"markdown",
		"lint",
		"CommonMark",
		"md",
		"multi-root ready"
	],
	"activationEvents": [
		"onLanguage:markdown"
	],
	"capabilities": {
		"untrustedWorkspaces": {
			"supported": "limited",
			"description": "In untrusted workspaces, JavaScript is blocked for custom rules, markdown-it plugins, and configuration files."
		},
		"virtualWorkspaces": {
			"supported": "limited",
			"description": "In virtual workspaces, JavaScript is blocked for custom rules, markdown-it plugins, and configuration files."
		}
	},
	"contributes": {
		"languages": [
			{
				"id": "ignore",
				"filenames": [
					".markdownlintignore"
				]
			}
		],
		"commands": [
			{
				"command": "markdownlint.fixAll",
				"title": "Fix all supported markdownlint violations in the document"
			},
			{
				"command": "markdownlint.lintWorkspace",
				"title": "Lint all Markdown files in the workspace with markdownlint"
			},
			{
				"command": "markdownlint.openConfigFile",
				"title": "Create or open the markdownlint configuration file for the workspace"
			},
			{
				"command": "markdownlint.toggleLinting",
				"title": "Toggle linting by markdownlint on/off (temporarily)"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "markdownlint.fixAll",
					"when": "editorLangId == markdown"
				},
				{
					"command": "markdownlint.lintWorkspace",
					"when": "workbenchState != empty && terminalProcessSupported"
				},
				{
					"command": "markdownlint.openConfigFile",
					"when": "workbenchState != empty"
				}
			]
		},
		"jsonValidation": [
			{
				"fileMatch": [
					".markdownlint.json",
					".markdownlint.jsonc"
				],
				"url": "./markdownlint-config-schema.json"
			},
			{
				"fileMatch": ".markdownlint-cli2.jsonc",
				"url": "./markdownlint-cli2-config-schema.json"
			}
		],
		"yamlValidation": [
			{
				"fileMatch": [
					".markdownlint.yaml",
					".markdownlint.yml"
				],
				"url": "./markdownlint-config-schema.json"
			},
			{
				"fileMatch": ".markdownlint-cli2.yaml",
				"url": "./markdownlint-cli2-config-schema.json"
			}
		],
		"taskDefinitions": [
			{
				"type": "markdownlint",
				"when": "workbenchState != empty"
			}
		],
		"problemMatchers": [
			{
				"name": "markdownlint",
				"owner": "markdownlint",
				"fileLocation": "relative",
				"pattern": {
					"regexp": "^([^:]+):(\\d+)(?::(\\d+))?\\s(\\S+)\\s(.+)$",
					"file": 1,
					"line": 2,
					"column": 3,
					"message": 5,
					"code": 4
				}
			}
		],
		"snippets": [
			{
				"language": "markdown",
				"path": "./snippets.json"
			}
		],
		"configuration": {
			"title": "markdownlint",
			"type": "object",
			"properties": {
				"markdownlint.customRules": {
					"description": "Array of paths for custom rules to include when linting",
					"scope": "resource",
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": []
				},
				"markdownlint.focusMode": {
					"description": "Makes it easier to focus while typing by hiding issues on or near the current line",
					"scope": "application",
					"type": [
						"boolean",
						"integer"
					],
					"default": false
				},
				"markdownlint.ignore": {
					"description": "Array or file of glob expressions to ignore when linting",
					"deprecationMessage": "Deprecated, use .markdownlint-cli2.{jsonc,yaml,cjs,mjs} and set 'gitignore' or 'ignores'",
					"scope": "resource",
					"type": [
						"array",
						"string"
					],
					"items": {
						"type": "string"
					},
					"default": ".markdownlintignore"
				},
				"markdownlint.lintWorkspaceGlobs": {
					"description": "Array of glob expressions to include or ignore when linting the workspace",
					"scope": "resource",
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [
						"**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}",
						"!**/bower_components",
						"!**/node_modules",
						"!**/vendor",
						"!**/.git"
					]
				},
				"markdownlint.run": {
					"description": "Run the linter on save (onSave) or on type (onType)",
					"scope": "resource",
					"type": "string",
					"enum": [
						"onSave",
						"onType"
					],
					"default": "onType"
				},
				"markdownlint.config": {
					"description": "markdownlint config object",
					"scope": "resource",
					"type": "object",
					"$ref": "https://raw.githubusercontent.com/DavidAnson/markdownlint/v0.34.0/schema/markdownlint-config-schema.json",
					"default": {}
				}
			}
		}
	}
}
